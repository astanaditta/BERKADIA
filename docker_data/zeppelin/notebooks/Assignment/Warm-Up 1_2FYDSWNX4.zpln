{
  "paragraphs": [
    {
      "text": "%md\n\n# To be proficient in Spark, one must have three fundamental skills:\n\n  1. The ability to **manipulate and understand the data**\n  1. The knowledge on **how to bend the tool to the programmer’s needs**\n  1. The art of finding a **balance among the factors that affect Spark jobs executions**\n\nThe following exercises will help to assess the skills above.",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 02:28:57.084",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eTo be proficient in Spark, one must have three fundamental skills:\u003c/h1\u003e\n\u003col\u003e\n  \u003cli\u003eThe ability to \u003cstrong\u003emanipulate and understand the data\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eThe knowledge on \u003cstrong\u003ehow to bend the tool to the programmer’s needs\u003c/strong\u003e\u003c/li\u003e\n  \u003cli\u003eThe art of finding a \u003cstrong\u003ebalance among the factors that affect Spark jobs executions\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThe following exercises will help to assess the skills above.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613433524014_788808294",
      "id": "paragraph_1613433524014_788808294",
      "dateCreated": "2021-02-15 23:58:44.014",
      "dateStarted": "2021-02-16 02:28:57.085",
      "dateFinished": "2021-02-16 02:28:57.093",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# The Dataset\nLet’s describe briefly the dataset that we are going to use. The data consists of extract files from the Microsoft Adventure Works OLTP database. Below you will find a paragraph querying the INFORMATION_SCHEMA data that gives a list of tables and descriptions. Data is available in this docker container at \"/files/AdventureWorks/\" in parquet format. You can also find a database diagram below or at https://i.stack.imgur.com/LMu4W.gif",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:10:34.765",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eThe Dataset\u003c/h1\u003e\n\u003cp\u003eLet’s describe briefly the dataset that we are going to use. The data consists of extract files from the Microsoft Adventure Works OLTP database. Below you will find a paragraph querying the INFORMATION_SCHEMA data that gives a list of tables and descriptions. Data is available in this docker container at \u0026ldquo;/files/AdventureWorks/\u0026rdquo; in parquet format. You can also find a database diagram below or at \u003ca href\u003d\"https://i.stack.imgur.com/LMu4W.gif\"\u003ehttps://i.stack.imgur.com/LMu4W.gif\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613430068146_405639893",
      "id": "paragraph_1613430068146_405639893",
      "dateCreated": "2021-02-15 23:01:08.146",
      "dateStarted": "2021-02-16 00:10:34.766",
      "dateFinished": "2021-02-16 00:10:34.773",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n![alt Adventure Works Database Diagram](https://i.stack.imgur.com/LMu4W.gif)",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:04:17.672",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://i.stack.imgur.com/LMu4W.gif\" alt\u003d\"alt Adventure Works Database Diagram\" /\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613433839221_619450427",
      "id": "paragraph_1613433839221_619450427",
      "dateCreated": "2021-02-16 00:03:59.221",
      "dateStarted": "2021-02-16 00:04:17.674",
      "dateFinished": "2021-02-16 00:04:17.678",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.sql.functions import input_file_name\nfrom pyspark.sql import functions as F\n\nz.show(spark.read.parquet(\"/files/INFORMATION_SCHEMA/TABLES\").select(F.col(\"TABLE_NAME\"), F.col(\"TABLE_COMMENT\")).where(\"TABLE_SCHEMA \u003d \u0027AdventureWorks2014\u0027\").orderBy(F.col(\"TABLE_NAME\")))",
      "user": "anonymous",
      "dateUpdated": "2021-02-15 23:20:44.049",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "TABLE_NAME0",
                        "visible": true,
                        "width": 304.0,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "TABLE_COMMENT1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "TABLE_NAME": "string",
                      "TABLE_COMMENT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "TABLE_NAME\tTABLE_COMMENT\nAWBuildVersion\tCurrent version number of the AdventureWorks 2014 sample database. \nAddress\tStreet address information for customers, employees, and vendors.\nAddressType\tTypes of addresses stored in the Address table. \nBillOfMaterials\tItems required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.\nBusinessEntity\tSource of the ID that connects vendors, customers, and employees with address and contact information.\nBusinessEntityAddress\tCross-reference table mapping customers, vendors, and employees to their addresses.\nBusinessEntityContact\tCross-reference table mapping stores, vendors, and employees to people\nContactType\tLookup table containing the types of business entity contacts.\nCountryRegion\tLookup table containing the ISO standard codes for countries and regions.\nCountryRegionCurrency\tCross-reference table mapping ISO currency codes to a country or region.\nCreditCard\tCustomer credit card information.\nCulture\tLookup table containing the languages in which some AdventureWorks data is stored.\nCurrency\tLookup table containing standard ISO currencies.\nCurrencyRate\tCurrency exchange rates.\nCustomer\tCurrent customer information. Also see the Person and Store tables.\nDatabaseLog\tAudit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.\nDepartment\tLookup table containing the departments within the Adventure Works Cycles company.\nDocument\tProduct maintenance documents.\nEmailAddress\tWhere to send a person email.\nEmployee\tEmployee information such as salary, department, and title.\nEmployeeDepartmentHistory\tEmployee department transfers.\nEmployeePayHistory\tEmployee pay history.\nErrorLog\tAudit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.\nIllustration\tBicycle assembly diagrams.\nJobCandidate\tRésumés submitted to Human Resources by job applicants.\nLocation\tProduct inventory and manufacturing locations.\nPassword\tOne way hashed authentication information\nPerson\tHuman beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.\nPersonCreditCard\tCross-reference table mapping people to their credit card information in the CreditCard table. \nPersonPhone\tTelephone number and type of a person.\nPhoneNumberType\tType of phone number of a person.\nProduct\tProducts sold or used in the manfacturing of sold products.\nProductCategory\tHigh-level product categorization.\nProductCostHistory\tChanges in the cost of a product over time.\nProductDescription\tProduct descriptions in several languages.\nProductDocument\tCross-reference table mapping products to related product documents.\nProductInventory\tProduct inventory information.\nProductListPriceHistory\tChanges in the list price of a product over time.\nProductModel\tProduct model classification.\nProductModelIllustration\tCross-reference table mapping product models and illustrations.\nProductModelProductDescriptionCulture\tCross-reference table mapping product descriptions and the language the description is written in.\nProductPhoto\tProduct images.\nProductProductPhoto\tCross-reference table mapping products and product photos.\nProductReview\tCustomer reviews of products they have purchased.\nProductSubcategory\tProduct subcategories. See ProductCategory table.\nProductVendor\tCross-reference table mapping vendors with the products they supply.\nPurchaseOrderDetail\tIndividual products associated with a specific purchase order. See PurchaseOrderHeader.\nPurchaseOrderHeader\tGeneral purchase order information. See PurchaseOrderDetail.\nSalesOrderDetail\tIndividual products associated with a specific sales order. See SalesOrderHeader.\nSalesOrderHeader\tGeneral sales order information.\nSalesOrderHeaderSalesReason\tCross-reference table mapping sales orders to sales reason codes.\nSalesPerson\tSales representative current information.\nSalesPersonQuotaHistory\tSales performance tracking.\nSalesReason\tLookup table of customer purchase reasons.\nSalesTaxRate\tTax rate lookup table.\nSalesTerritory\tSales territory lookup table.\nSalesTerritoryHistory\tSales representative transfers to other sales territories.\nScrapReason\tManufacturing failure reasons lookup table.\nShift\tWork shift lookup table.\nShipMethod\tShipping company lookup table.\nShoppingCartItem\tContains online customer orders until the order is submitted or cancelled.\nSpecialOffer\tSale discounts lookup table.\nSpecialOfferProduct\tCross-reference table mapping products to special offer discounts.\nStateProvince\tState and province lookup table.\nStore\tCustomers (resellers) of Adventure Works products.\nTransactionHistory\tRecord of each purchase order, sales order, or work order transaction year to date.\nTransactionHistoryArchive\tTransactions for previous years.\nUnitMeasure\tUnit of measure lookup table.\nVendor\tCompanies from whom Adventure Works Cycles purchases parts or other goods.\nWorkOrder\tManufacturing work orders.\nWorkOrderRouting\tWork order details.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1311"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1312"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613427629760_1539992709",
      "id": "paragraph_1613427629760_1539992709",
      "dateCreated": "2021-02-15 22:20:29.760",
      "dateStarted": "2021-02-15 23:20:44.096",
      "dateFinished": "2021-02-15 23:20:44.631",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Warm-Up 1\n\nFind out how many of the below are found in the data:\n\n  1. Sales\n  1. Products\n  1. Sellers\n  1. How many products have been sold at least once?\n  1. Which product is found in the most sales?\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:06:56.341",
      "config": {
        "colWidth": 2.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eWarm-Up 1\u003c/h1\u003e\n\u003cp\u003eFind out how many of the below are found in the data:\u003c/p\u003e\n\u003col\u003e\n  \u003cli\u003eSales\u003c/li\u003e\n  \u003cli\u003eProducts\u003c/li\u003e\n  \u003cli\u003eSellers\u003c/li\u003e\n  \u003cli\u003eHow many products have been sold at least once?\u003c/li\u003e\n  \u003cli\u003eWhich product is found in the most sales?\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613429275983_1191839057",
      "id": "paragraph_1613429275983_1191839057",
      "dateCreated": "2021-02-15 22:47:55.983",
      "dateStarted": "2021-02-15 23:01:05.862",
      "dateFinished": "2021-02-15 23:01:05.869",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\ndf_sales_header       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesOrderHeader\")\ndf_sales_detail       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesOrderDetail\")\ndf_sales_person       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesPerson\")\ndf_production_product \u003d spark.read.parquet(\"/files/AdventureWorks/Product\")",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:07:54.925",
      "config": {
        "colWidth": 10.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613434022202_865669202",
      "id": "paragraph_1613434022202_865669202",
      "dateCreated": "2021-02-16 00:07:02.202",
      "status": "READY"
    },
    {
      "text": "%md\n\n# Warm-Up 2\n\nHow many distinct products have been sold each day?",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:06:30.743",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eWarm-Up 2\u003c/h1\u003e\n\u003cp\u003eHow many distinct products have been sold each day?\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613431431388_350325179",
      "id": "paragraph_1613431431388_350325179",
      "dateCreated": "2021-02-15 23:23:51.388",
      "dateStarted": "2021-02-16 00:06:30.744",
      "dateFinished": "2021-02-16 00:06:30.748",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Exercise 1\n\nWhat is the average sub total for every order? ",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:05:17.102",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExercise 1\u003c/h1\u003e\n\u003cp\u003eWhat is the average sub total for every order?\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613431484029_1752708006",
      "id": "paragraph_1613431484029_1752708006",
      "dateCreated": "2021-02-15 23:24:44.029",
      "dateStarted": "2021-02-16 00:05:17.103",
      "dateFinished": "2021-02-16 00:05:17.107",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Exercise 2\n\nFor each seller, what is the average % contribution of an order to the seller\u0027s daily quota?\n\n## Example\nIf Seller 1 with `SalesQuota\u003d300000.0` has 3 orders:\n\nOrder 1: Sub Total 20,565\nOrder 2: Sub Total  1,294\nOrder 3: Sub Total 32,726\n\nThe average % contribution of orders to the seller\u0027s quota would be:\n\nOrder 1: 20565/300000.0 \u003d 0.068\nOrder 2: 1294 /300000.0 \u003d 0.004\nOrder 3: 32726/300000.0 \u003d 0.109\n\nAverage % Contribution \u003d (0.068 + 0.004 + 0.109)/3 \u003d 0.06033333",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:05:31.033",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExercise 2\u003c/h1\u003e\n\u003cp\u003eFor each seller, what is the average % contribution of an order to the seller\u0026rsquo;s daily quota?\u003c/p\u003e\n\u003ch2\u003eExample\u003c/h2\u003e\n\u003cp\u003eIf Seller 1 with \u003ccode\u003eSalesQuota\u003d300000.0\u003c/code\u003e has 3 orders:\u003c/p\u003e\n\u003cp\u003eOrder 1: Sub Total 20,565\u003cbr/\u003eOrder 2: Sub Total 1,294\u003cbr/\u003eOrder 3: Sub Total 32,726\u003c/p\u003e\n\u003cp\u003eThe average % contribution of orders to the seller\u0026rsquo;s quota would be:\u003c/p\u003e\n\u003cp\u003eOrder 1: 20565/300000.0 \u003d 0.068\u003cbr/\u003eOrder 2: 1294 /300000.0 \u003d 0.004\u003cbr/\u003eOrder 3: 32726/300000.0 \u003d 0.109\u003c/p\u003e\n\u003cp\u003eAverage % Contribution \u003d (0.068 + 0.004 + 0.109)/3 \u003d 0.06033333\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613431618025_1860458670",
      "id": "paragraph_1613431618025_1860458670",
      "dateCreated": "2021-02-15 23:26:58.025",
      "dateStarted": "2021-02-16 00:05:31.034",
      "dateFinished": "2021-02-16 00:05:31.042",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Exercise 3\n\nWho are the sellers that sell the second most and least number of each product? Who are those for the product with `ProductId \u003d 1`?",
      "user": "anonymous",
      "dateUpdated": "2021-02-15 23:52:18.235",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExercise 3\u003c/h1\u003e\n\u003cp\u003eWho are the sellers that sell the second most and least number of each product? Who are those for the product with \u003ccode\u003eProductId \u003d 1\u003c/code\u003e?\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613432734840_1488041363",
      "id": "paragraph_1613432734840_1488041363",
      "dateCreated": "2021-02-15 23:45:34.840",
      "dateStarted": "2021-02-15 23:52:18.236",
      "dateFinished": "2021-02-15 23:52:18.242",
      "status": "FINISHED"
    },
    {
      "text": "%md\n\n# Exercise 4\n\nCreate a new column called \"hashed_bill\" defined as follows:\n\n\u003e if the order_id is even: apply MD5 hashing iteratively to the CreditCardApprovalCode field, once for each \u00278\u0027 present in the text. E.g. if the Credit Card Approval Code is \u0027105041Vi84182\u0027, you would apply hashing two times iteratively (only if the order number is even)\n\n\u003e if the order_id is odd: apply SHA256 hashing to the bill text\n\nFinally, check if there are any duplicate on the new column",
      "user": "anonymous",
      "dateUpdated": "2021-02-15 23:57:46.204",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eExercise 4\u003c/h1\u003e\n\u003cp\u003eCreate a new column called \u0026ldquo;hashed_bill\u0026rdquo; defined as follows:\u003c/p\u003e\n\u003cblockquote\u003e\n  \u003cp\u003eif the order_id is even: apply MD5 hashing iteratively to the CreditCardApprovalCode field, once for each \u0026lsquo;8\u0026rsquo; present in the text. E.g. if the Credit Card Approval Code is \u0026lsquo;105041Vi84182\u0026rsquo;, you would apply hashing two times iteratively (only if the order number is even)\u003c/p\u003e\n  \u003cp\u003eif the order_id is odd: apply SHA256 hashing to the bill text\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eFinally, check if there are any duplicate on the new column\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613433134423_69012190",
      "id": "paragraph_1613433134423_69012190",
      "dateCreated": "2021-02-15 23:52:14.423",
      "dateStarted": "2021-02-15 23:57:46.206",
      "dateFinished": "2021-02-15 23:57:46.214",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\ndf_sales_header       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesOrderHeader\")\ndf_sales_detail       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesOrderDetail\")\ndf_sales_person       \u003d spark.read.parquet(\"/files/AdventureWorks/SalesPerson\")\ndf_production_product \u003d spark.read.parquet(\"/files/AdventureWorks/Product\")\n\n# df_sales_header.printSchema()\n# df_sales_detail.printSchema()\n# df_sales_person.printSchema()\n# df_production_product.printSchema()\n# z.show(df_sales_header.limit(3))",
      "user": "anonymous",
      "dateUpdated": "2021-02-16 00:05:08.576",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "AccountNumber": "string",
                      "BillToAddressID": "string",
                      "Comment": "string",
                      "CreditCardApprovalCode": "string",
                      "CreditCardID": "string",
                      "CurrencyRateID": "string",
                      "CustomerID": "string",
                      "DueDate": "string",
                      "Freight": "string",
                      "ModifiedDate": "string",
                      "OnlineOrderFlag": "string",
                      "OrderDate": "string",
                      "PurchaseOrderNumber": "string",
                      "RevisionNumber": "string",
                      "SalesOrderID": "string",
                      "SalesOrderNumber": "string",
                      "SalesPersonID": "string",
                      "ShipDate": "string",
                      "ShipMethodID": "string",
                      "ShipToAddressID": "string",
                      "Status": "string",
                      "SubTotal": "string",
                      "TaxAmt": "string",
                      "TerritoryID": "string",
                      "TotalDue": "string",
                      "rowguid": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "CarrierTrackingNumber": "string",
                      "LineTotal": "string",
                      "ModifiedDate": "string",
                      "OrderQty": "string",
                      "ProductID": "string",
                      "SalesOrderDetailID": "string",
                      "SalesOrderID": "string",
                      "SpecialOfferID": "string",
                      "UnitPrice": "string",
                      "UnitPriceDiscount": "string",
                      "rowguid": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1333"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1334"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1335"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d1336"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613427588010_1388908013",
      "id": "paragraph_1613427588010_1388908013",
      "dateCreated": "2021-02-15 22:19:48.010",
      "dateStarted": "2021-02-16 00:05:08.615",
      "dateFinished": "2021-02-16 00:05:09.489",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2021-02-15 23:12:12.901",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1613430732901_1409021242",
      "id": "paragraph_1613430732901_1409021242",
      "dateCreated": "2021-02-15 23:12:12.901",
      "status": "READY"
    }
  ],
  "name": "Warm-Up 1",
  "id": "2FYDSWNX4",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}